knitr::opts_chunk$set(echo = TRUE)
p3 <- insurance_claims %>%
ggplot(aes(x = age,y = log(tot_claims))) +
geom_point(col = "black") +
labs(x = "Age",y = "log(Total amount of Claims)",
title = "Age vs Log transformed\nTotal amount of Claims") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
install.packages("latex")
install.packages("MASS")
library(MASS)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(performance)
library(tinytex)
library(sp)
insurance_claims <- read.csv("E:/3rd year 1st sem/ST-301 (Regression Analysis)/insurance_claims.csv")
attach(insurance_claims)
head(insurance_claims)
summary(insurance_claims)
str(insurance_claims)
p1 <- insurance_claims %>%
ggplot(aes(x = tot_claims)) +
geom_histogram(col = "black", fill = "yellow") +
labs(x = "Total amount of Claims",
title = "Histogram for Total amount of Claims") +
theme_bw()
p2 <- insurance_claims %>%
ggplot(aes(x = log(tot_claims))) +
geom_histogram(col = "black", fill = "green") +
labs(x = "log(Total amount of Claims)",
title = "Histogram for Log transformed\nTotal amount of Claims") +
theme_bw()
grid.arrange(p1,p2, ncol = 2)
p01 <- insurance_claims %>%
ggplot(aes(y = tot_claims)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "Total amount of Claims",
title = "Boxplot for Total amount of Claims") +
theme_bw()
p02 <- insurance_claims %>%
ggplot(aes(y = log(tot_claims))) +
geom_boxplot(col = "black", fill = "red") +
labs(x = "log(Total amount of Claims)",
title = "Boxplot for Log transformed\nTotal amount of Claims") +
theme_bw()
grid.arrange(p01,p02, ncol = 2)
p3 <- insurance_claims %>%
ggplot(aes(x = age,y = log(tot_claims))) +
geom_point(col = "black") +
labs(x = "Age",y = "log(Total amount of Claims)",
title = "Age vs Log transformed\nTotal amount of Claims") +
theme_bw()
p4 <- insurance_claims %>%
ggplot(aes(y = age)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "Age",
title = "Boxplot for Age") +
theme_bw()
grid.arrange(p3,p4, ncol = 2)
p5 <- insurance_claims %>%
ggplot(aes(x = bmi,y = log(tot_claims))) +
geom_point(col = "blue") +
labs(x = "BMI",y = "log(Total amount of Claims)",
title = "BMI vs Log transformed\nTotal amount of Claims") +
theme_bw()
p6 <- insurance_claims %>%
ggplot(aes(y = bmi)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "BMI",
title = "Boxplot for BMI") +
theme_bw()
grid.arrange(p5,p6, ncol = 2)
p7 <- insurance_claims %>%
ggplot(aes(x = children,y = log(tot_claims))) +
geom_point(col = "green") +
labs(x = "Number of Dependents",y = "log(Total amount of Claims)",
title = "Number of Dependents vs Log\ntransformed Total amount of Claims") +
theme_bw()
p8 <- insurance_claims %>%
ggplot(aes(y = children)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "Number of Dependents",
title = "Boxplot for Number of Dependents") +
theme_bw()
grid.arrange(p7,p8, ncol = 2)
p9 <- insurance_claims %>%
ggplot(aes(x = sex, y = tot_claims)) +
geom_boxplot(fill = "skyblue") +
labs(x = "Gender",y = "Total amount of Claims",
title = "Total amount of claims across\nGender") +
theme_bw()
p10 <- insurance_claims %>%
ggplot(aes(x = sex,y = log(tot_claims))) +
geom_boxplot(fill = "skyblue") +
labs(x = "Gender",y = "log(Total amount of Claims)",
title = "log(Total amount of claims) across\nGender") +
theme_bw()
grid.arrange(p9,p10, ncol = 2)
p11 <- insurance_claims %>%
ggplot(aes(x = is_smoker, y = tot_claims)) +
geom_boxplot(fill = "skyblue") +
labs(x = "Smoking status",y = "Total amount of Claims",
title = "Total amount of claims across\nSmoking status") +
theme_bw()
p12 <- insurance_claims %>%
ggplot(aes(x = is_smoker,y = log(tot_claims))) +
geom_boxplot(fill = "skyblue") +
labs(x = "Smoking status",y = "log(Total amount of Claims)",
title = "log(Total amount of claims) across\nSmoking status") +
theme_bw()
grid.arrange(p11,p12, ncol = 2)
p13 <- insurance_claims %>%
ggplot(aes(x = working_env, y = tot_claims)) +
geom_boxplot(fill = "skyblue") +
labs(x = " Working environment",y = "Total amount of Claims",
title = "Total amount of claims across\nWorking environment") +
theme_bw()
p14 <- insurance_claims %>%
ggplot(aes(x = working_env,y = log(tot_claims))) +
geom_boxplot(fill = "skyblue") +
labs(x = "Working environment",y = "log(Total amount of Claims)",
title = "log(Total amount of claims) across\nWorking environment") +
theme_bw()
grid.arrange(p13,p14, ncol = 2)
corrplot(cor(insurance_claims[,c("age","bmi","children")]),method = 'square')
insurance_claims$sex <- as.numeric(factor(insurance_claims$sex , labels = c("male" , "female")))
insurance_claims$is_smoker <- as.numeric(factor(insurance_claims$is_smoker , labels = c("yes" , "no")))
insurance_claims$working_env <- as.numeric(factor(insurance_claims$working_env , labels = c("factory" , "office" , "construction_site")))
str(insurance_claims)
head(insurance_claims)
summary(lm(tot_claims ~ age, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ is_smoker, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + is_smoker, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi + children + sex, data = insurance_claims))$adj.r.squared
plot(c(1,2,3,4,5,6),c(0.8614734,0.886051,0.9013036,0.9063182,0.9085069, 0.9085106),
xlab = "Number of variables in the model", ylab ="Adjusted R-squared", type="o")
full_model <- lm(tot_claims ~ . , data = insurance_claims)
drop1(full_model, test = "F")
summary(full_model)
red_model <- lm(tot_claims ~ age + bmi + children + is_smoker + working_env , data = insurance_claims)
summary(red_model)
anova(full_model,red_model)
check_model(red_model, check = c("linearity","homogeneity","qq","outliers"))
check_normality(red_model)
check_heteroskedasticity(red_model)
check_outliers(red_model)
check_autocorrelation(red_model)
log_model <- lm(log(tot_claims) ~ age + bmi + children + is_smoker + working_env, data = insurance_claims )
summary(log_model)
check_model(log_model, check = c("qq", "linearity", "homogeneity", "outliers"))
check_normality(log_model)
check_heteroskedasticity(log_model)
check_outliers(log_model)
check_autocorrelation(log_model)
library(MASS)
boxcox(red_model)
library(MASS)
boxcox(red_model)
boxcox(red_model)
box_trans <- boxcox(red_model)
---
title: "ST-301_Assignment_01"
---
title: "ST-301_Assignment_01"
(lambda <- box_trans$x[which.max(box_trans$y)])
(lambda <- box_trans$x[which.max(box_trans$y)])
log_model <- lm(log(tot_claims) ~ age + bmi + children + is_smoker + working_env, data = insurance_claims )
summary(log_model)
box_trans <- boxcox(red_model)
(lambda <- box_trans$x[which.max(box_trans$y)])
---
title: "ST-301_Assignment_01"
(lambda <- box_trans$x[which.max(box_trans$y)])
log_model <- lm(log(tot_claims) ~ age + bmi + children + is_smoker + working_env, data = insurance_claims )
summary(log_model)
knitr::opts_chunk$set(echo = TRUE)
(lambda <- box_trans$x[which.max(box_trans$y)])
box_trans <- boxcox(red_model)
knitr::opts_chunk$set(echo = TRUE)
install.packages("latex")
knitr::opts_chunk$set(echo = TRUE)
install.packages("latex")
install.packages("MASS")
library(MASS)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(performance)
library(tinytex)
library(sp)
insurance_claims <- read.csv("E:/3rd year 1st sem/ST-301 (Regression Analysis)/insurance_claims.csv")
attach(insurance_claims)
head(insurance_claims)
summary(insurance_claims)
str(insurance_claims)
p1 <- insurance_claims %>%
ggplot(aes(x = tot_claims)) +
geom_histogram(col = "black", fill = "yellow") +
labs(x = "Total amount of Claims",
title = "Histogram for Total amount of Claims") +
theme_bw()
p2 <- insurance_claims %>%
ggplot(aes(x = log(tot_claims))) +
geom_histogram(col = "black", fill = "green") +
labs(x = "log(Total amount of Claims)",
title = "Histogram for Log transformed\nTotal amount of Claims") +
theme_bw()
grid.arrange(p1,p2, ncol = 2)
p01 <- insurance_claims %>%
ggplot(aes(y = tot_claims)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "Total amount of Claims",
title = "Boxplot for Total amount of Claims") +
theme_bw()
p02 <- insurance_claims %>%
ggplot(aes(y = log(tot_claims))) +
geom_boxplot(col = "black", fill = "red") +
labs(x = "log(Total amount of Claims)",
title = "Boxplot for Log transformed\nTotal amount of Claims") +
theme_bw()
grid.arrange(p01,p02, ncol = 2)
p3 <- insurance_claims %>%
ggplot(aes(x = age,y = log(tot_claims))) +
geom_point(col = "black") +
labs(x = "Age",y = "log(Total amount of Claims)",
title = "Age vs Log transformed\nTotal amount of Claims") +
theme_bw()
p4 <- insurance_claims %>%
ggplot(aes(y = age)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "Age",
title = "Boxplot for Age") +
theme_bw()
grid.arrange(p3,p4, ncol = 2)
p5 <- insurance_claims %>%
ggplot(aes(x = bmi,y = log(tot_claims))) +
geom_point(col = "blue") +
labs(x = "BMI",y = "log(Total amount of Claims)",
title = "BMI vs Log transformed\nTotal amount of Claims") +
theme_bw()
p6 <- insurance_claims %>%
ggplot(aes(y = bmi)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "BMI",
title = "Boxplot for BMI") +
theme_bw()
grid.arrange(p5,p6, ncol = 2)
p7 <- insurance_claims %>%
ggplot(aes(x = children,y = log(tot_claims))) +
geom_point(col = "green") +
labs(x = "Number of Dependents",y = "log(Total amount of Claims)",
title = "Number of Dependents vs Log\ntransformed Total amount of Claims") +
theme_bw()
p8 <- insurance_claims %>%
ggplot(aes(y = children)) +
geom_boxplot(col = "blue", fill = "skyblue") +
labs(x = "Number of Dependents",
title = "Boxplot for Number of Dependents") +
theme_bw()
grid.arrange(p7,p8, ncol = 2)
p9 <- insurance_claims %>%
ggplot(aes(x = sex, y = tot_claims)) +
geom_boxplot(fill = "skyblue") +
labs(x = "Gender",y = "Total amount of Claims",
title = "Total amount of claims across\nGender") +
theme_bw()
p10 <- insurance_claims %>%
ggplot(aes(x = sex,y = log(tot_claims))) +
geom_boxplot(fill = "skyblue") +
labs(x = "Gender",y = "log(Total amount of Claims)",
title = "log(Total amount of claims) across\nGender") +
theme_bw()
grid.arrange(p9,p10, ncol = 2)
p11 <- insurance_claims %>%
ggplot(aes(x = is_smoker, y = tot_claims)) +
geom_boxplot(fill = "skyblue") +
labs(x = "Smoking status",y = "Total amount of Claims",
title = "Total amount of claims across\nSmoking status") +
theme_bw()
p12 <- insurance_claims %>%
ggplot(aes(x = is_smoker,y = log(tot_claims))) +
geom_boxplot(fill = "skyblue") +
labs(x = "Smoking status",y = "log(Total amount of Claims)",
title = "log(Total amount of claims) across\nSmoking status") +
theme_bw()
grid.arrange(p11,p12, ncol = 2)
p13 <- insurance_claims %>%
ggplot(aes(x = working_env, y = tot_claims)) +
geom_boxplot(fill = "skyblue") +
labs(x = " Working environment",y = "Total amount of Claims",
title = "Total amount of claims across\nWorking environment") +
theme_bw()
p14 <- insurance_claims %>%
ggplot(aes(x = working_env,y = log(tot_claims))) +
geom_boxplot(fill = "skyblue") +
labs(x = "Working environment",y = "log(Total amount of Claims)",
title = "log(Total amount of claims) across\nWorking environment") +
theme_bw()
grid.arrange(p13,p14, ncol = 2)
corrplot(cor(insurance_claims[,c("age","bmi","children")]),method = 'square')
insurance_claims$sex <- as.numeric(factor(insurance_claims$sex , labels = c("male" , "female")))
insurance_claims$is_smoker <- as.numeric(factor(insurance_claims$is_smoker , labels = c("yes" , "no")))
insurance_claims$working_env <- as.numeric(factor(insurance_claims$working_env , labels = c("factory" , "office" , "construction_site")))
str(insurance_claims)
head(insurance_claims)
summary(lm(tot_claims ~ age, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ is_smoker, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + is_smoker, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi + sex, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi + children, data = insurance_claims))$adj.r.squared
summary(lm(tot_claims ~ working_env + age + is_smoker + bmi + children + sex, data = insurance_claims))$adj.r.squared
plot(c(1,2,3,4,5,6),c(0.8614734,0.886051,0.9013036,0.9063182,0.9085069, 0.9085106),
xlab = "Number of variables in the model", ylab ="Adjusted R-squared", type="o")
full_model <- lm(tot_claims ~ . , data = insurance_claims)
drop1(full_model, test = "F")
summary(full_model)
red_model <- lm(tot_claims ~ age + bmi + children + is_smoker + working_env , data = insurance_claims)
summary(red_model)
anova(full_model,red_model)
check_model(red_model, check = c("linearity","homogeneity","qq","outliers"))
check_normality(red_model)
check_heteroskedasticity(red_model)
check_outliers(red_model)
check_autocorrelation(red_model)
box_trans <- boxcox(red_model)
(lambda <- box_trans$x[which.max(box_trans$y)])
log_model <- lm(log(tot_claims) ~ age + bmi + children + is_smoker + working_env, data = insurance_claims )
summary(log_model)
check_model(log_model, check = c("qq", "linearity", "homogeneity", "outliers"))
check_normality(log_model)
check_heteroskedasticity(log_model)
check_outliers(log_model)
check_autocorrelation(log_model)
fit_model <- lm(((tot_claims^lambda-1)/lambda) ~ working_env + is_smoker + bmi + children + age, data = insurance_claims)
summary(fit_model)
check_model(fit_model, check = c("qq", "linearity", "homogeneity", "outliers"))
check_normality(fit_model)
check_heteroskedasticity(fit_model)
check_outliers(fit_model)
check_autocorrelation(fit_model)
vif(red_model)
install.packages("tinytex")
install.packages("tinytex")
knitr::opts_chunk$set(echo = TRUE)
install.packages("latex")
install.packages("MASS")
install.packages("tinytex")
library(MASS)
library(tidyverse)
library(gridExtra)
library(corrplot)
library(performance)
library(tinytex)
library(sp)
library(car)
library(caTools)
library(carTools)
library(caTools)
library(quantmod)
library(xts)
library(zoo)
library(caTools)
install.packages("caTools")
install.packages("caTools")
library(caTools)
install.packages("caTools")
vif(red_model)
vif_values <- vif(red_model)
barplot(vif_values, main = "VIF values", horiz = TRUE, col = "green")
abline(v = 4, lwd = 3, lty = 2)
vif_values <- vif(red_model)
barplot(vif_values, main = "VIF values", horiz = TRUE, col = "green")
abline(v = 4, lwd = 3, lty = 2)
vif_values <- vif(red_model)
barplot(vif_values, main = "VIF values", horiz = TRUE, col = "green")
abline(v = 4, lwd = 3, lty = 2)
vif_values <- vif(red_model)
barplot(vif_values, main = "VIF values", horiz = TRUE, col = "green")
abline(v = 3, lwd = 2, lty = 1)
abline(v = 4, lwd = 3, lty = 2)
vif_values <- vif(red_model)
barplot(vif_values, main = "VIF values", horiz = TRUE, col = "green")
abline(v = 4, lwd = 3, lty = 2)
insurance_claims %>% select(age, bmi, is_smoker) %>% pairs()
insurance_claims %>% select(red_model) %>% pairs()
r
insurance_claims %>% select(age, bmi, is_smoker) %>% pairs()
dim(insurance_claims)
coef(log_model)
coef_log_model <- coef(log_model)
coef_log_model <- coef(log_model)
coef_log_model
insurance_claims + geom_abline(intercept = coef_log_model[1], slope = coef_log_model[2], color = "red")
log_model + geom_abline(intercept = coef_log_model[1], slope = coef_log_model[2], color = "red")
coef_log_model <- coef(log_model)
coef_log_model
log_model + geom_abline(intercept = coef_log_model[1], slope = coef_log_model[2], color = "red")
plot(log_model)
plot(log_model) + geom_abline(intercept = coef_log_model[1], slope = coef_log_model[2], color = "red")
coef_log_model <- coef(log_model)
coef_log_model
plot(log_model) + geom_abline(intercept = coef_log_model[1], slope = coef_log_model[2], color = "red")
